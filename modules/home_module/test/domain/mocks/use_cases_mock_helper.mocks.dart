// Mocks generated by Mockito 5.4.5 from annotations
// in home_module/test/domain/mocks/use_cases_mock_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i3;
import 'package:home_module/domain/entities/qr_scann_entity.dart' as _i10;
import 'package:home_module/domain/repositories/qr_history_repository.dart'
    as _i2;
import 'package:home_module/domain/repositories/qr_scanner_repository.dart'
    as _i4;
import 'package:home_module/domain/use_cases/clear_qr_history_use_case.dart'
    as _i5;
import 'package:home_module/domain/use_cases/get_qr_history_use_case.dart'
    as _i9;
import 'package:home_module/domain/use_cases/save_qr_history_use_case.dart'
    as _i11;
import 'package:home_module/domain/use_cases/scan_qr_use_case.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_module/entities/no_parameters.dart' as _i8;
import 'package:shared_module/errors/failures.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeQrHistoryRepository_0 extends _i1.SmartFake
    implements _i2.QrHistoryRepository {
  _FakeQrHistoryRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQrScannerRepository_2 extends _i1.SmartFake
    implements _i4.QrScannerRepository {
  _FakeQrScannerRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ClearQrHistoryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockClearQrHistoryUseCase extends _i1.Mock
    implements _i5.ClearQrHistoryUseCase {
  MockClearQrHistoryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.QrHistoryRepository get qrHistoryRepository => (super.noSuchMethod(
        Invocation.getter(#qrHistoryRepository),
        returnValue: _FakeQrHistoryRepository_0(
          this,
          Invocation.getter(#qrHistoryRepository),
        ),
      ) as _i2.QrHistoryRepository);

  @override
  _i6.Future<_i3.Either<_i7.Failure, _i8.NoParams>> call(_i8.NoParams? input) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [input],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, _i8.NoParams>>.value(
            _FakeEither_1<_i7.Failure, _i8.NoParams>(
          this,
          Invocation.method(
            #call,
            [input],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, _i8.NoParams>>);
}

/// A class which mocks [GetQrHistoryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetQrHistoryUseCase extends _i1.Mock
    implements _i9.GetQrHistoryUseCase {
  MockGetQrHistoryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.QrHistoryRepository get qrHistoryRepository => (super.noSuchMethod(
        Invocation.getter(#qrHistoryRepository),
        returnValue: _FakeQrHistoryRepository_0(
          this,
          Invocation.getter(#qrHistoryRepository),
        ),
      ) as _i2.QrHistoryRepository);

  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i10.QrScan>>> call(
          _i8.NoParams? input) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [input],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i10.QrScan>>>.value(
                _FakeEither_1<_i7.Failure, List<_i10.QrScan>>(
          this,
          Invocation.method(
            #call,
            [input],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i10.QrScan>>>);
}

/// A class which mocks [SaveQrHistoryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveQrHistoryUseCase extends _i1.Mock
    implements _i11.SaveQrHistoryUseCase {
  MockSaveQrHistoryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.QrHistoryRepository get qrHistoryRepository => (super.noSuchMethod(
        Invocation.getter(#qrHistoryRepository),
        returnValue: _FakeQrHistoryRepository_0(
          this,
          Invocation.getter(#qrHistoryRepository),
        ),
      ) as _i2.QrHistoryRepository);

  @override
  _i6.Future<_i3.Either<_i7.Failure, _i8.NoParams>> call(_i10.QrScan? input) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [input],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, _i8.NoParams>>.value(
            _FakeEither_1<_i7.Failure, _i8.NoParams>(
          this,
          Invocation.method(
            #call,
            [input],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, _i8.NoParams>>);
}

/// A class which mocks [ScanQrUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockScanQrUseCase extends _i1.Mock implements _i12.ScanQrUseCase {
  MockScanQrUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.QrScannerRepository get qrScannerRepository => (super.noSuchMethod(
        Invocation.getter(#qrScannerRepository),
        returnValue: _FakeQrScannerRepository_2(
          this,
          Invocation.getter(#qrScannerRepository),
        ),
      ) as _i4.QrScannerRepository);

  @override
  _i6.Future<_i3.Either<_i7.Failure, _i10.QrScan>> call(_i8.NoParams? input) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [input],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, _i10.QrScan>>.value(
            _FakeEither_1<_i7.Failure, _i10.QrScan>(
          this,
          Invocation.method(
            #call,
            [input],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, _i10.QrScan>>);
}
